#ifndef BRL_SOCKET_SOCKET_BMX_RELEASE_HAIKU_X64_H
#define BRL_SOCKET_SOCKET_BMX_RELEASE_HAIKU_X64_H

#include <brl.mod/blitz.mod/.bmx/blitz.bmx.release.haiku.x64.h>
#include <pub.mod/stdc.mod/.bmx/stdc.bmx.release.haiku.x64.h>
int __bb_brl_socket_socket();
struct brl_socket_TSocketException_obj;
struct brl_socket_TSocket_obj;
void _brl_socket_TSocketException_New(struct brl_socket_TSocketException_obj* o);
BBSTRING _brl_socket_TSocketException_ToString(struct brl_socket_TSocketException_obj* o);
struct BBClass_brl_socket_TSocketException {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
};

struct brl_socket_TSocketException_obj {
	struct BBClass_brl_socket_TSocketException* clas;
};
extern struct BBClass_brl_socket_TSocketException brl_socket_TSocketException;
void _brl_socket_TSocket_New(struct brl_socket_TSocket_obj* o);
typedef BBLONG (*brl_socket_TSocket_Send_pbzi_m)(struct brl_socket_TSocket_obj*,BBBYTE*,BBSIZET,BBINT);
BBLONG _brl_socket_TSocket_Send_pbzi(struct brl_socket_TSocket_obj*,BBBYTE*,BBSIZET,BBINT);
typedef BBLONG (*brl_socket_TSocket_Recv_pbzi_m)(struct brl_socket_TSocket_obj*,BBBYTE*,BBSIZET,BBINT);
BBLONG _brl_socket_TSocket_Recv_pbzi(struct brl_socket_TSocket_obj*,BBBYTE*,BBSIZET,BBINT);
typedef BBINT (*brl_socket_TSocket_Close_m)(struct brl_socket_TSocket_obj*);
BBINT _brl_socket_TSocket_Close(struct brl_socket_TSocket_obj*);
typedef BBINT (*brl_socket_TSocket_Connected_m)(struct brl_socket_TSocket_obj*);
BBINT _brl_socket_TSocket_Connected(struct brl_socket_TSocket_obj*);
typedef BBINT (*brl_socket_TSocket_Bind_ii_m)(struct brl_socket_TSocket_obj*,BBINT,BBINT);
BBINT _brl_socket_TSocket_Bind_ii(struct brl_socket_TSocket_obj*,BBINT,BBINT);
typedef BBINT (*brl_socket_TSocket_Bind_TTAddrInfo_m)(struct brl_socket_TSocket_obj*,struct pub_stdc_TAddrInfo_obj*);
BBINT _brl_socket_TSocket_Bind_TTAddrInfo(struct brl_socket_TSocket_obj*,struct pub_stdc_TAddrInfo_obj*);
typedef BBINT (*brl_socket_TSocket_Connect_TTAddrInfo_m)(struct brl_socket_TSocket_obj*,struct pub_stdc_TAddrInfo_obj*);
BBINT _brl_socket_TSocket_Connect_TTAddrInfo(struct brl_socket_TSocket_obj*,struct pub_stdc_TAddrInfo_obj*);
typedef BBINT (*brl_socket_TSocket_Listen_i_m)(struct brl_socket_TSocket_obj*,BBINT);
BBINT _brl_socket_TSocket_Listen_i(struct brl_socket_TSocket_obj*,BBINT);
typedef struct brl_socket_TSocket_obj* (*brl_socket_TSocket_Accept_iTTSockaddrStorage_m)(struct brl_socket_TSocket_obj*,BBINT,struct pub_stdc_TSockaddrStorage_obj*);
struct brl_socket_TSocket_obj* _brl_socket_TSocket_Accept_iTTSockaddrStorage(struct brl_socket_TSocket_obj*,BBINT,struct pub_stdc_TSockaddrStorage_obj*);
typedef BBINT (*brl_socket_TSocket_ReadAvail_m)(struct brl_socket_TSocket_obj*);
BBINT _brl_socket_TSocket_ReadAvail(struct brl_socket_TSocket_obj*);
typedef BBINT (*brl_socket_TSocket_SetTCPNoDelay_i_m)(struct brl_socket_TSocket_obj*,BBINT);
BBINT _brl_socket_TSocket_SetTCPNoDelay_i(struct brl_socket_TSocket_obj*,BBINT);
typedef BBINT (*brl_socket_TSocket_SetSockOpt_iii_m)(struct brl_socket_TSocket_obj*,BBINT,BBINT,BBINT);
BBINT _brl_socket_TSocket_SetSockOpt_iii(struct brl_socket_TSocket_obj*,BBINT,BBINT,BBINT);
typedef BBINT (*brl_socket_TSocket_Socket_m)(struct brl_socket_TSocket_obj*);
BBINT _brl_socket_TSocket_Socket(struct brl_socket_TSocket_obj*);
typedef BBSTRING (*brl_socket_TSocket_LocalIp_m)(struct brl_socket_TSocket_obj*);
BBSTRING _brl_socket_TSocket_LocalIp(struct brl_socket_TSocket_obj*);
typedef BBINT (*brl_socket_TSocket_LocalPort_m)(struct brl_socket_TSocket_obj*);
BBINT _brl_socket_TSocket_LocalPort(struct brl_socket_TSocket_obj*);
typedef BBSTRING (*brl_socket_TSocket_RemoteIp_m)(struct brl_socket_TSocket_obj*);
BBSTRING _brl_socket_TSocket_RemoteIp(struct brl_socket_TSocket_obj*);
typedef BBINT (*brl_socket_TSocket_RemotePort_m)(struct brl_socket_TSocket_obj*);
BBINT _brl_socket_TSocket_RemotePort(struct brl_socket_TSocket_obj*);
typedef BBINT (*brl_socket_TSocket_UpdateLocalName_m)(struct brl_socket_TSocket_obj*);
BBINT _brl_socket_TSocket_UpdateLocalName(struct brl_socket_TSocket_obj*);
typedef BBINT (*brl_socket_TSocket_UpdateRemoteName_m)(struct brl_socket_TSocket_obj*);
BBINT _brl_socket_TSocket_UpdateRemoteName(struct brl_socket_TSocket_obj*);
typedef struct brl_socket_TSocket_obj* (*brl_socket_TSocket_Create_TTSocket_ii_f)(BBINT,BBINT);
struct brl_socket_TSocket_obj* brl_socket_TSocket_Create_TTSocket_ii(BBINT,BBINT);
typedef struct brl_socket_TSocket_obj* (*brl_socket_TSocket_CreateUDP_TTSocket_i_f)(BBINT);
struct brl_socket_TSocket_obj* brl_socket_TSocket_CreateUDP_TTSocket_i(BBINT);
typedef struct brl_socket_TSocket_obj* (*brl_socket_TSocket_CreateTCP_TTSocket_i_f)(BBINT);
struct brl_socket_TSocket_obj* brl_socket_TSocket_CreateTCP_TTSocket_i(BBINT);
typedef struct brl_socket_TSocket_obj* (*brl_socket_TSocket_Create_TTSocket_TTAddrInfo_f)(struct pub_stdc_TAddrInfo_obj*);
struct brl_socket_TSocket_obj* brl_socket_TSocket_Create_TTSocket_TTAddrInfo(struct pub_stdc_TAddrInfo_obj*);
struct BBClass_brl_socket_TSocket {
	BBClass*  super;
	void      (*free)( BBObject *o );
	BBDebugScope* debug_scope;
	unsigned int instance_size;
	void      (*ctor)( BBOBJECT o );
	void      (*dtor)( BBOBJECT o );
	BBSTRING  (*ToString)( BBOBJECT x );
	int       (*Compare)( BBOBJECT x,BBOBJECT y );
	BBOBJECT  (*SendMessage)( BBOBJECT o,BBOBJECT m,BBOBJECT s );
	BBINTERFACETABLE itable;
	void*     extra;
	unsigned int obj_size;
	unsigned int instance_count;
	unsigned int fields_offset;
	brl_socket_TSocket_Send_pbzi_m m_Send_pbzi;
	brl_socket_TSocket_Recv_pbzi_m m_Recv_pbzi;
	brl_socket_TSocket_Close_m m_Close;
	brl_socket_TSocket_Connected_m m_Connected;
	brl_socket_TSocket_Bind_ii_m m_Bind_ii;
	brl_socket_TSocket_Bind_TTAddrInfo_m m_Bind_TTAddrInfo;
	brl_socket_TSocket_Connect_TTAddrInfo_m m_Connect_TTAddrInfo;
	brl_socket_TSocket_Listen_i_m m_Listen_i;
	brl_socket_TSocket_Accept_iTTSockaddrStorage_m m_Accept_iTTSockaddrStorage;
	brl_socket_TSocket_ReadAvail_m m_ReadAvail;
	brl_socket_TSocket_SetTCPNoDelay_i_m m_SetTCPNoDelay_i;
	brl_socket_TSocket_SetSockOpt_iii_m m_SetSockOpt_iii;
	brl_socket_TSocket_Socket_m m_Socket;
	brl_socket_TSocket_LocalIp_m m_LocalIp;
	brl_socket_TSocket_LocalPort_m m_LocalPort;
	brl_socket_TSocket_RemoteIp_m m_RemoteIp;
	brl_socket_TSocket_RemotePort_m m_RemotePort;
	brl_socket_TSocket_UpdateLocalName_m m_UpdateLocalName;
	brl_socket_TSocket_UpdateRemoteName_m m_UpdateRemoteName;
	brl_socket_TSocket_Create_TTSocket_ii_f f_Create_TTSocket_ii;
	brl_socket_TSocket_CreateUDP_TTSocket_i_f f_CreateUDP_TTSocket_i;
	brl_socket_TSocket_CreateTCP_TTSocket_i_f f_CreateTCP_TTSocket_i;
	brl_socket_TSocket_Create_TTSocket_TTAddrInfo_f f_Create_TTSocket_TTAddrInfo;
};

struct brl_socket_TSocket_obj {
	struct BBClass_brl_socket_TSocket* clas;
	BBINT _brl_socket_tsocket__socket;
	BBINT _brl_socket_tsocket__autoclose;
	BBSTRING _brl_socket_tsocket__localip;
	BBINT _brl_socket_tsocket__localport;
	BBSTRING _brl_socket_tsocket__remoteip;
	BBINT _brl_socket_tsocket__remoteport;
};
extern struct BBClass_brl_socket_TSocket brl_socket_TSocket;
struct brl_socket_TSocket_obj* brl_socket_CreateUDPSocket();
struct brl_socket_TSocket_obj* brl_socket_CreateTCPSocket();
BBINT brl_socket_CloseSocket(struct brl_socket_TSocket_obj* bbt_socket);
BBINT brl_socket_BindSocket(struct brl_socket_TSocket_obj* bbt_socket,BBINT bbt_localPort,BBINT bbt_family);
BBINT brl_socket_ConnectSocket(struct brl_socket_TSocket_obj* bbt_socket,struct pub_stdc_TAddrInfo_obj* bbt_AddrInfo);
BBINT brl_socket_SocketListen(struct brl_socket_TSocket_obj* bbt_socket,BBINT bbt_backlog);
struct brl_socket_TSocket_obj* brl_socket_SocketAccept(struct brl_socket_TSocket_obj* bbt_socket,BBINT bbt_timeout);
BBINT brl_socket_SocketConnected(struct brl_socket_TSocket_obj* bbt_socket);
BBINT brl_socket_SocketReadAvail(struct brl_socket_TSocket_obj* bbt_socket);
BBSTRING brl_socket_SocketLocalIP(struct brl_socket_TSocket_obj* bbt_socket);
BBINT brl_socket_SocketLocalPort(struct brl_socket_TSocket_obj* bbt_socket);
BBSTRING brl_socket_SocketRemoteIP(struct brl_socket_TSocket_obj* bbt_socket);
BBINT brl_socket_SocketRemotePort(struct brl_socket_TSocket_obj* bbt_socket);
BBSTRING brl_socket_DottedIP(BBINT bbt_ip);
BBINT brl_socket_DottedIPToInt(BBSTRING bbt_addr);
BBINT brl_socket_InetPton(BBINT bbt_family,BBSTRING bbt_src,BBBYTE* bbt_dst);
BBARRAY brl_socket_AddrInfo(BBSTRING bbt_host,BBSTRING bbt_service,BBINT bbt_family);
BBARRAY brl_socket_AddrInfo2(BBSTRING bbt_host,BBSTRING bbt_service,struct pub_stdc_TAddrInfo_obj* bbt_hints);
BBARRAY brl_socket_HostIps(BBSTRING bbt_HostName,BBINT bbt_family);
BBSTRING brl_socket_HostIp(BBSTRING bbt_HostName,BBINT bbt_index,BBINT bbt_family);
BBSTRING brl_socket_HostName(BBSTRING bbt_HostIp,BBINT bbt_family);

#endif
